provider "aws" {
  alias  = "us-east-1"
  region = "us-east-1"
}

# Add one provider per region (required for cross-region deployment)
provider "aws" {
  alias  = "us-west-1"
  region = "us-west-1"
}

provider "aws" {
  alias  = "ap-south-1"
  region = "ap-south-1"
}

# Extend as needed...

# List of regions you want to replicate to
locals {
  target_regions = ["us-west-1", "ap-south-1"]
}

# Data block to fetch the value from us-east-1
data "aws_ssm_parameter" "source" {
  name            = "/your/parameter/name"
  with_decryption = true
  provider        = aws.us-east-1
}

# Filter regions only if value != "PLACE_HOLDER"
locals {
  valid_regions = data.aws_ssm_parameter.source.value != "PLACE_HOLDER"
    ? local.target_regions
    : []
}

# Map of region => provider alias
locals {
  region_provider_map = {
    "us-west-1"  = aws.us-west-1,
    "ap-south-1" = aws.ap-south-1
  }
}

# Create parameter in other regions only if value is valid
resource "aws_ssm_parameter" "replicated" {
  for_each = toset(local.valid_regions)

  name        = "/your/parameter/name"
  type        = "SecureString"
  value       = data.aws_ssm_parameter.source.value
  overwrite   = true
  description = "Replicated from us-east-1"

  provider    = local.region_provider_map[each.key]
}