terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = ">= 4.0"
    }
  }
}

# ----------------------------
# Define all providers (with alias)
# ----------------------------

provider "aws" {
  alias  = "us-east-1"
  region = "us-east-1"
}

provider "aws" {
  alias  = "us-west-1"
  region = "us-west-1"
}

provider "aws" {
  alias  = "ap-south-1"
  region = "ap-south-1"
}

# ----------------------------
# Input: Target regions
# ----------------------------

locals {
  target_regions = ["us-west-1", "ap-south-1"]
}

# ----------------------------
# Fetch parameter from us-east-1
# ----------------------------

data "aws_ssm_parameter" "jsm_routing_key" {
  name            = "/transfer-hub/central/jsm/routing-key"
  with_decryption = true
  provider        = aws.us-east-1
}

# ----------------------------
# Logic for conditional replication
# ----------------------------

locals {
  jsm_routing_key_value = data.aws_ssm_parameter.jsm_routing_key.value

  should_replicate      = local.jsm_routing_key_value != "PLACE_HOLDER"

  # Replicate only if value is NOT PLACE_HOLDER
  replication_regions   = local.should_replicate ? local.target_regions : []
}

# ----------------------------
# Replicate parameter to target regions
# ----------------------------

resource "aws_ssm_parameter" "replicated" {
  for_each = toset(local.replication_regions)

  provider = each.key == "us-west-1"  ? aws.us-west-1 :
             each.key == "ap-south-1" ? aws.ap-south-1 :
             aws.us-east-1  # fallback (optional)

  name        = "/transfer-hub/central/jsm/routing-key"
  type        = "String"
  value       = local.jsm_routing_key_value
  overwrite   = true
  description = "Replicated from us-east-1"
}